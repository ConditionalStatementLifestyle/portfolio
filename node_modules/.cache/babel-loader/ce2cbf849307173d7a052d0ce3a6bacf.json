{"ast":null,"code":"var _jsxFileName = \"/Users/don/Development/HomeProjects/portfolio/src/Components/ProjectModal.js\";\nimport React from 'react';\nimport { Button, Header, Modal } from 'semantic-ui-react';\nexport default class ProjectModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.show = dimmer => () => {\n      this.setState({\n        dimmer,\n        open: true\n      });\n    };\n\n    this.close = () => {\n      this.props.setShow(false);\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.show !== state.open) {\n      return {\n        open: props.show\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      open: props.open,\n      onClose: () => props.toggleOpen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, props.projectInfo.name), React.createElement(Modal.Content, {\n      image: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Modal.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Header, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, props.projectInfo.description), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Frontend:\", props.projectInfo.frontend), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Backend:\", props.projectInfo.backend), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Technologies:\", props.projectInfo.technologies), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: props.projectInfo.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"URL\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"black\",\n      onClick: () => props.toggleOpen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Close\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/don/Development/HomeProjects/portfolio/src/Components/ProjectModal.js"],"names":["React","Button","Header","Modal","ProjectModal","Component","state","open","show","dimmer","setState","close","props","setShow","getDerivedStateFromProps","render","toggleOpen","projectInfo","name","description","frontend","backend","technologies","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,QAAsC,mBAAtC;AAEA,eAAe,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAEtDC,KAFsD,GAE9C;AACJC,MAAAA,IAAI,EAAG;AADH,KAF8C;;AAAA,SAMtDC,IANsD,GAM/CC,MAAM,IAAI,MAAM;AACnB,WAAKC,QAAL,CAAc;AAAED,QAAAA,MAAF;AAAUF,QAAAA,IAAI,EAAE;AAAhB,OAAd;AACH,KARqD;;AAAA,SAUtDI,KAVsD,GAU9C,MAAM;AACV,WAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAnB;AACH,KAZqD;AAAA;;AActD,SAAOC,wBAAP,CAAgCF,KAAhC,EAAuCN,KAAvC,EAA8C;AAC1C,QAAIM,KAAK,CAACJ,IAAN,KAAeF,KAAK,CAACC,IAAzB,EAA+B;AAC3B,aAAO;AACHA,QAAAA,IAAI,EAAEK,KAAK,CAACJ;AADT,OAAP;AAGH;;AACD,WAAO,IAAP;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEH,KAAK,CAACL,IAAnB;AAAyB,MAAA,OAAO,EAAE,MAAMK,KAAK,CAACI,UAAN,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeJ,KAAK,CAACK,WAAN,CAAkBC,IAAjC,CADA,EAEA,oBAAC,KAAD,CAAO,OAAP;AAAe,MAAA,KAAK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBN,KAAK,CAACK,WAAN,CAAkBE,WAAxC,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeP,KAAK,CAACK,WAAN,CAAkBG,QAAjC,CAFA,EAEgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFhD,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcR,KAAK,CAACK,WAAN,CAAkBI,OAAhC,CAHA,EAG8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH9C,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmBT,KAAK,CAACK,WAAN,CAAkBK,YAArC,CAJA,EAIwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJxD,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAG,MAAA,IAAI,EAAEV,KAAK,CAACK,WAAN,CAAkBM,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAL,CALA,EAKkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALlD,CADJ,CAFA,EAWA,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,OAAO,EAAE,MAAMX,KAAK,CAACI,UAAN,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAGa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHb,EAGsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHtB,CAXA,CAFJ,CADJ;AAsBH;;AA9CqD","sourcesContent":["import React from 'react'\nimport { Button, Header, Modal } from 'semantic-ui-react'\n\nexport default class ProjectModal extends React.Component {\n\n    state = {\n        open : false\n    }\n\n    show = dimmer => () => {\n        this.setState({ dimmer, open: true })\n    }\n    \n    close = () => {\n        this.props.setShow(false)\n    }\n    \n    static getDerivedStateFromProps(props, state) {\n        if (props.show !== state.open) {      \n            return {\n                open: props.show\n            };\n        }\n        return null;\n    }\n\n    render() {\n        return (\n            <div>\n                {/* <Button className='ui black button' onClick={() => this.props.toggleOpen()}>More Info</Button> */}\n                <Modal open={props.open} onClose={() => props.toggleOpen()}>\n                <Modal.Header>{props.projectInfo.name}</Modal.Header>\n                <Modal.Content image>\n                    <Modal.Description>\n                    <Header size='large'>{props.projectInfo.description}</Header>\n                    <div>Frontend:{props.projectInfo.frontend}</div><br></br>\n                    <div>Backend:{props.projectInfo.backend}</div><br></br>\n                    <div>Technologies:{props.projectInfo.technologies}</div><br></br>\n                    <div><a href={props.projectInfo.url}>URL</a></div><br></br>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button color='black' onClick={() => props.toggleOpen()}>\n                    Close\n                    </Button><br></br><br></br>\n                </Modal.Actions>\n                </Modal>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}